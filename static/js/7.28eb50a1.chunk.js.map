{"version":3,"sources":["components/BlogCard/BlogCard.jsx","components/BlogCard/index.js","pages/Blog/Blog.jsx","pages/Blog/index.js","components/TopNav/TopNav.jsx","components/TopNav/index.js"],"names":["BlogCard","title","desc","link","pubDate","categories","badgeString","getRandomBadge","id","Math","floor","random","length","parsedDesc","slice","className","map","item","key","content","href","target","parser","Parser","Blog","useState","setMediumMeta","articles","setArticles","useEffect","getMediumData","a","parseURL","feed","console","log","items","TopNav","image","withRouter","props","isDropdownExpand","setIsDropdownExpand","navList","samePageLink","path","diffPageLink","highlighted","isInSamePage","matchPath","location","pathname","exact","activeClass","to","spy","smooth","offset","duration","onClick"],"mappings":"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","file":"static/js/7.28eb50a1.chunk.js","sourcesContent":["import React from 'react';\nimport { Markup } from 'interweave';\n\nimport './style.scss';\n\nfunction BlogCard({ title, desc, link, pubDate, categories }) {\n  const badgeString = [\n    'secondary',\n    'success',\n    'secondary',\n    'danger',\n    'primary',\n    'warning',\n    'info',\n    'light',\n    'primary',\n  ];\n  const getRandomBadge = () => {\n    const id = Math.floor(Math.random() * badgeString.length);\n    return badgeString[id];\n  };\n\n  const parsedDesc = desc.length > 500 ? desc.slice(0, 500) : desc;\n  return (\n    <div className=\"card blog-card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        <div className=\"pub-date\">{pubDate}</div>\n        <div className=\"categories\">\n          {categories.map((item) => (\n            <span className={`badge badge-${getRandomBadge()}`} key={item}>\n              {item}\n            </span>\n          ))}\n        </div>\n        <p className=\"card-text\">\n          <Markup content={parsedDesc} />\n        </p>\n        <a href={link} className=\"btn btn-dark\" target=\"__blank\">\n          See more\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default BlogCard;\n","import BlogCard from './BlogCard';\n\nexport default BlogCard;\n","import React, { useEffect, useState } from 'react';\nimport Parser from 'rss-parser';\nimport TopNav from 'components/TopNav';\nimport BlogCard from 'components/BlogCard';\nimport './style.scss';\n\nconst parser = new Parser({});\n\nfunction Blog() {\n  const [mediumMeta, setMediumMeta] = useState({});\n  const [articles, setArticles] = useState([]);\n\n  useEffect(() => {\n    getMediumData();\n  }, []);\n\n  const getMediumData = async () => {\n    const url = 'https://medium.com/feed/@andreassujono';\n    const feed = await parser.parseURL(url);\n    console.log(feed);\n\n    setMediumMeta(feed);\n    setArticles(feed.items);\n  };\n\n  return (\n    <div className=\"blog-page\">\n      <TopNav />\n      <div className=\"blog-header\" />\n      <div className=\"blog-content row\">\n        {articles.map((item) => (\n          <div className=\"col-lg-4 col-md-6 col-12\" key={item.title}>\n            <BlogCard\n              title={item.title}\n              image=\"\"\n              desc={item.content || item['content:encoded']}\n              link={item.link}\n              pubDate={item.pubDate.slice(0, 17)}\n              categories={item.categories}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Blog;\n","import Blog from './Blog';\n\nexport default Blog;\n","import React, { useState } from 'react';\nimport { Link as DiffPageLink, withRouter, matchPath } from 'react-router-dom';\nimport { Link as SamePageLink } from 'react-scroll';\nimport { GiHamburgerMenu as DropdownIcon } from 'react-icons/gi';\n\nimport './style.scss';\n\nconst TopNav = (props) => {\n  const [isDropdownExpand, setIsDropdownExpand] = useState(false);\n  const navList = [\n    { title: 'Home', samePageLink: true, path: '/', id: 'firstPage' },\n    { title: 'About', samePageLink: true, path: '/', id: 'about' },\n    { title: 'Projects', samePageLink: true, path: '/', id: 'projects' },\n    {\n      title: 'Certificates',\n      samePageLink: true,\n      path: '/',\n      id: 'certificates',\n    },\n    { title: 'Gallery', samePageLink: true, path: '/', id: 'gallery' },\n    { title: 'Contact', samePageLink: true, path: '/', id: 'footer' },\n    { title: 'Blog', diffPageLink: true, highlighted: true, path: '/blog' },\n  ];\n\n  const isInSamePage = (path) => {\n    return matchPath(path, { path: props.location.pathname, exact: true });\n  };\n\n  return (\n    <div className=\"topNav fluid-container\">\n      <ul className=\"inline-ul\">\n        {navList.map((item) =>\n          item.samePageLink && isInSamePage(item.path) ? (\n            <li\n              className={item.highlighted ? 'highlighted' : ''}\n              key={item.title}\n            >\n              <SamePageLink\n                activeClass=\"navActive\"\n                to={item.id}\n                spy\n                smooth\n                offset={-40}\n                duration={500}\n              >\n                {item.title}\n              </SamePageLink>\n            </li>\n          ) : (\n            <li\n              key={item.title}\n              className={item.highlighted ? 'highlighted' : ''}\n            >\n              <DiffPageLink to={item.path}>{item.title}</DiffPageLink>\n            </li>\n          ),\n        )}\n      </ul>\n      <div className=\"dropdown-container\">\n        <DropdownIcon\n          className=\"icon dropdown-icon\"\n          onClick={() => setIsDropdownExpand(!isDropdownExpand)}\n        />\n        <ul\n          className={`dropdown-content${\n            isDropdownExpand ? ' dropdown-expand' : ''\n          }`}\n        >\n          {navList.map((item) =>\n            item.samePageLink && isInSamePage(item.path) ? (\n              <li\n                key={item.title}\n                className={item.highlighted ? 'highlighted' : ''}\n              >\n                <SamePageLink\n                  activeClass=\"navActive\"\n                  to={item.id}\n                  spy\n                  smooth\n                  offset={-40}\n                  duration={500}\n                >\n                  {item.title}\n                </SamePageLink>\n              </li>\n            ) : (\n              <li\n                key={item.title}\n                className={item.highlighted ? 'highlighted' : ''}\n              >\n                <DiffPageLink to={item.path}>{item.title}</DiffPageLink>\n              </li>\n            ),\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(TopNav);\n","import TopNav from './TopNav';\n\nexport default TopNav;\n"],"sourceRoot":""}