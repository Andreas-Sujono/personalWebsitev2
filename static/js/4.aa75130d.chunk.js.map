{"version":3,"sources":["components/BlogCard/BlogCard.jsx","components/BlogCard/index.js","pages/Blog/Blog.jsx","pages/Blog/index.js"],"names":["BlogCard","title","desc","link","pubDate","categories","badgeString","getRandomBadge","id","Math","floor","random","length","parsedDesc","slice","className","map","item","key","content","href","target","parser","Parser","Blog","useState","setMediumMeta","articles","setArticles","useEffect","getMediumData","a","parseURL","feed","console","log","items","TopNav","image"],"mappings":"mTA8CeA,IC5CAA,EDGf,YAA+D,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACxCC,EAAc,CAClB,YACA,UACA,YACA,SACA,UACA,UACA,OACA,QACA,WAEIC,EAAiB,WACrB,IAAMC,EAAKC,KAAKC,MAAMD,KAAKE,SAAWL,EAAYM,QAClD,OAAON,EAAYE,IAGfK,EAAaX,EAAKU,OAAS,IAAMV,EAAKY,MAAM,EAAG,KAAOZ,EAC5D,OACE,yBAAKa,UAAU,kBACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAcd,GAC5B,yBAAKc,UAAU,YAAYX,GAC3B,yBAAKW,UAAU,cACZV,EAAWW,KAAI,SAACC,GAAD,OACd,0BAAMF,UAAS,sBAAiBR,KAAoBW,IAAKD,GACtDA,OAIP,uBAAGF,UAAU,aACX,kBAAC,IAAD,CAAQI,QAASN,KAEnB,uBAAGO,KAAMjB,EAAMY,UAAU,eAAeM,OAAO,WAA/C,eEhCFC,G,OAAS,IAAIC,IAAO,KAyCXC,MAvCf,WAAiB,IAAD,EACsBC,mBAAS,IAD/B,mBACKC,GADL,aAEkBD,mBAAS,IAF3B,mBAEPE,EAFO,KAEGC,EAFH,KAIdC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAa,uCAAG,4BAAAC,EAAA,4DACR,yCADQ,SAEDT,EAAOU,SADd,0CADQ,OAEdC,EAFc,OAGpBC,QAAQC,IAAIF,GAEZP,EAAcO,GACdL,EAAYK,EAAKG,OANG,2CAAH,qDASnB,OACE,yBAAKrB,UAAU,aACb,kBAACsB,EAAA,EAAD,MACA,yBAAKtB,UAAU,gBACf,yBAAKA,UAAU,oBACZY,EAASX,KAAI,SAACC,GAAD,OACZ,yBAAKF,UAAU,2BAA2BG,IAAKD,EAAKhB,OAClD,kBAAC,EAAD,CACEA,MAAOgB,EAAKhB,MACZqC,MAAM,GACNpC,KAAMe,EAAKE,SAAWF,EAAK,mBAC3Bd,KAAMc,EAAKd,KACXC,QAASa,EAAKb,QAAQU,MAAM,EAAG,IAC/BT,WAAYY,EAAKZ,oBCpChBmB","file":"static/js/4.aa75130d.chunk.js","sourcesContent":["import React from 'react';\nimport { Markup } from 'interweave';\n\nimport './style.scss';\n\nfunction BlogCard({ title, desc, link, pubDate, categories }) {\n  const badgeString = [\n    'secondary',\n    'success',\n    'secondary',\n    'danger',\n    'primary',\n    'warning',\n    'info',\n    'light',\n    'primary',\n  ];\n  const getRandomBadge = () => {\n    const id = Math.floor(Math.random() * badgeString.length);\n    return badgeString[id];\n  };\n\n  const parsedDesc = desc.length > 500 ? desc.slice(0, 500) : desc;\n  return (\n    <div className=\"card blog-card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        <div className=\"pub-date\">{pubDate}</div>\n        <div className=\"categories\">\n          {categories.map((item) => (\n            <span className={`badge badge-${getRandomBadge()}`} key={item}>\n              {item}\n            </span>\n          ))}\n        </div>\n        <p className=\"card-text\">\n          <Markup content={parsedDesc} />\n        </p>\n        <a href={link} className=\"btn btn-dark\" target=\"__blank\">\n          See more\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default BlogCard;\n","import BlogCard from './BlogCard';\n\nexport default BlogCard;\n","import React, { useEffect, useState } from 'react';\nimport Parser from 'rss-parser';\nimport TopNav from 'components/TopNav';\nimport BlogCard from 'components/BlogCard';\nimport './style.scss';\n\nconst parser = new Parser({});\n\nfunction Blog() {\n  const [mediumMeta, setMediumMeta] = useState({});\n  const [articles, setArticles] = useState([]);\n\n  useEffect(() => {\n    getMediumData();\n  }, []);\n\n  const getMediumData = async () => {\n    const url = 'https://medium.com/feed/@andreassujono';\n    const feed = await parser.parseURL(url);\n    console.log(feed);\n\n    setMediumMeta(feed);\n    setArticles(feed.items);\n  };\n\n  return (\n    <div className=\"blog-page\">\n      <TopNav />\n      <div className=\"blog-header\" />\n      <div className=\"blog-content row\">\n        {articles.map((item) => (\n          <div className=\"col-lg-4 col-md-6 col-12\" key={item.title}>\n            <BlogCard\n              title={item.title}\n              image=\"\"\n              desc={item.content || item['content:encoded']}\n              link={item.link}\n              pubDate={item.pubDate.slice(0, 17)}\n              categories={item.categories}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Blog;\n","import Blog from './Blog';\n\nexport default Blog;\n"],"sourceRoot":""}